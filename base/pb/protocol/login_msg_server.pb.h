// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login_msg_server.proto

#ifndef PROTOBUF_INCLUDED_login_5fmsg_5fserver_2eproto
#define PROTOBUF_INCLUDED_login_5fmsg_5fserver_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_login_5fmsg_5fserver_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_login_5fmsg_5fserver_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_login_5fmsg_5fserver_2eproto();
namespace login_msg_server {
class IMMsgServInfo;
class IMMsgServInfoDefaultTypeInternal;
extern IMMsgServInfoDefaultTypeInternal _IMMsgServInfo_default_instance_;
class IMMsgServRsp;
class IMMsgServRspDefaultTypeInternal;
extern IMMsgServRspDefaultTypeInternal _IMMsgServRsp_default_instance_;
class IMUserCntUpdate;
class IMUserCntUpdateDefaultTypeInternal;
extern IMUserCntUpdateDefaultTypeInternal _IMUserCntUpdate_default_instance_;
}  // namespace login_msg_server
namespace google {
namespace protobuf {
template<> ::login_msg_server::IMMsgServInfo* Arena::CreateMaybeMessage<::login_msg_server::IMMsgServInfo>(Arena*);
template<> ::login_msg_server::IMMsgServRsp* Arena::CreateMaybeMessage<::login_msg_server::IMMsgServRsp>(Arena*);
template<> ::login_msg_server::IMUserCntUpdate* Arena::CreateMaybeMessage<::login_msg_server::IMUserCntUpdate>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace login_msg_server {

// ===================================================================

class IMMsgServInfo :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:login_msg_server.IMMsgServInfo) */ {
 public:
  IMMsgServInfo();
  virtual ~IMMsgServInfo();

  IMMsgServInfo(const IMMsgServInfo& from);

  inline IMMsgServInfo& operator=(const IMMsgServInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMMsgServInfo(IMMsgServInfo&& from) noexcept
    : IMMsgServInfo() {
    *this = ::std::move(from);
  }

  inline IMMsgServInfo& operator=(IMMsgServInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const IMMsgServInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMMsgServInfo* internal_default_instance() {
    return reinterpret_cast<const IMMsgServInfo*>(
               &_IMMsgServInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(IMMsgServInfo* other);
  friend void swap(IMMsgServInfo& a, IMMsgServInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMMsgServInfo* New() const final {
    return CreateMaybeMessage<IMMsgServInfo>(nullptr);
  }

  IMMsgServInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IMMsgServInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IMMsgServInfo& from);
  void MergeFrom(const IMMsgServInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IMMsgServInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip_addr1 = 1;
  void clear_ip_addr1();
  static const int kIpAddr1FieldNumber = 1;
  const ::std::string& ip_addr1() const;
  void set_ip_addr1(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_addr1(::std::string&& value);
  #endif
  void set_ip_addr1(const char* value);
  void set_ip_addr1(const char* value, size_t size);
  ::std::string* mutable_ip_addr1();
  ::std::string* release_ip_addr1();
  void set_allocated_ip_addr1(::std::string* ip_addr1);

  // string ip_addr2 = 2;
  void clear_ip_addr2();
  static const int kIpAddr2FieldNumber = 2;
  const ::std::string& ip_addr2() const;
  void set_ip_addr2(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_addr2(::std::string&& value);
  #endif
  void set_ip_addr2(const char* value);
  void set_ip_addr2(const char* value, size_t size);
  ::std::string* mutable_ip_addr2();
  ::std::string* release_ip_addr2();
  void set_allocated_ip_addr2(::std::string* ip_addr2);

  // string hostname = 6;
  void clear_hostname();
  static const int kHostnameFieldNumber = 6;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_hostname(::std::string&& value);
  #endif
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // uint32 port = 3;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // uint32 max_conn_cnt = 4;
  void clear_max_conn_cnt();
  static const int kMaxConnCntFieldNumber = 4;
  ::google::protobuf::uint32 max_conn_cnt() const;
  void set_max_conn_cnt(::google::protobuf::uint32 value);

  // uint32 cur_conn_cnt = 5;
  void clear_cur_conn_cnt();
  static const int kCurConnCntFieldNumber = 5;
  ::google::protobuf::uint32 cur_conn_cnt() const;
  void set_cur_conn_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:login_msg_server.IMMsgServInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_addr1_;
  ::google::protobuf::internal::ArenaStringPtr ip_addr2_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 max_conn_cnt_;
  ::google::protobuf::uint32 cur_conn_cnt_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login_5fmsg_5fserver_2eproto;
};
// -------------------------------------------------------------------

class IMUserCntUpdate :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:login_msg_server.IMUserCntUpdate) */ {
 public:
  IMUserCntUpdate();
  virtual ~IMUserCntUpdate();

  IMUserCntUpdate(const IMUserCntUpdate& from);

  inline IMUserCntUpdate& operator=(const IMUserCntUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMUserCntUpdate(IMUserCntUpdate&& from) noexcept
    : IMUserCntUpdate() {
    *this = ::std::move(from);
  }

  inline IMUserCntUpdate& operator=(IMUserCntUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const IMUserCntUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMUserCntUpdate* internal_default_instance() {
    return reinterpret_cast<const IMUserCntUpdate*>(
               &_IMUserCntUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(IMUserCntUpdate* other);
  friend void swap(IMUserCntUpdate& a, IMUserCntUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMUserCntUpdate* New() const final {
    return CreateMaybeMessage<IMUserCntUpdate>(nullptr);
  }

  IMUserCntUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IMUserCntUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IMUserCntUpdate& from);
  void MergeFrom(const IMUserCntUpdate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IMUserCntUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 user_action = 1;
  void clear_user_action();
  static const int kUserActionFieldNumber = 1;
  ::google::protobuf::uint32 user_action() const;
  void set_user_action(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:login_msg_server.IMUserCntUpdate)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 user_action_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login_5fmsg_5fserver_2eproto;
};
// -------------------------------------------------------------------

class IMMsgServRsp :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:login_msg_server.IMMsgServRsp) */ {
 public:
  IMMsgServRsp();
  virtual ~IMMsgServRsp();

  IMMsgServRsp(const IMMsgServRsp& from);

  inline IMMsgServRsp& operator=(const IMMsgServRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMMsgServRsp(IMMsgServRsp&& from) noexcept
    : IMMsgServRsp() {
    *this = ::std::move(from);
  }

  inline IMMsgServRsp& operator=(IMMsgServRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const IMMsgServRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMMsgServRsp* internal_default_instance() {
    return reinterpret_cast<const IMMsgServRsp*>(
               &_IMMsgServRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(IMMsgServRsp* other);
  friend void swap(IMMsgServRsp& a, IMMsgServRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMMsgServRsp* New() const final {
    return CreateMaybeMessage<IMMsgServRsp>(nullptr);
  }

  IMMsgServRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IMMsgServRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IMMsgServRsp& from);
  void MergeFrom(const IMMsgServRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IMMsgServRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string prior_ip = 2;
  void clear_prior_ip();
  static const int kPriorIpFieldNumber = 2;
  const ::std::string& prior_ip() const;
  void set_prior_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_prior_ip(::std::string&& value);
  #endif
  void set_prior_ip(const char* value);
  void set_prior_ip(const char* value, size_t size);
  ::std::string* mutable_prior_ip();
  ::std::string* release_prior_ip();
  void set_allocated_prior_ip(::std::string* prior_ip);

  // string backip_ip = 3;
  void clear_backip_ip();
  static const int kBackipIpFieldNumber = 3;
  const ::std::string& backip_ip() const;
  void set_backip_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_backip_ip(::std::string&& value);
  #endif
  void set_backip_ip(const char* value);
  void set_backip_ip(const char* value, size_t size);
  ::std::string* mutable_backip_ip();
  ::std::string* release_backip_ip();
  void set_allocated_backip_ip(::std::string* backip_ip);

  // int32 result_code = 1;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  ::google::protobuf::int32 result_code() const;
  void set_result_code(::google::protobuf::int32 value);

  // uint32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:login_msg_server.IMMsgServRsp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr prior_ip_;
  ::google::protobuf::internal::ArenaStringPtr backip_ip_;
  ::google::protobuf::int32 result_code_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login_5fmsg_5fserver_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IMMsgServInfo

// string ip_addr1 = 1;
inline void IMMsgServInfo::clear_ip_addr1() {
  ip_addr1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMMsgServInfo::ip_addr1() const {
  // @@protoc_insertion_point(field_get:login_msg_server.IMMsgServInfo.ip_addr1)
  return ip_addr1_.GetNoArena();
}
inline void IMMsgServInfo::set_ip_addr1(const ::std::string& value) {
  
  ip_addr1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login_msg_server.IMMsgServInfo.ip_addr1)
}
#if LANG_CXX11
inline void IMMsgServInfo::set_ip_addr1(::std::string&& value) {
  
  ip_addr1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:login_msg_server.IMMsgServInfo.ip_addr1)
}
#endif
inline void IMMsgServInfo::set_ip_addr1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ip_addr1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login_msg_server.IMMsgServInfo.ip_addr1)
}
inline void IMMsgServInfo::set_ip_addr1(const char* value, size_t size) {
  
  ip_addr1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login_msg_server.IMMsgServInfo.ip_addr1)
}
inline ::std::string* IMMsgServInfo::mutable_ip_addr1() {
  
  // @@protoc_insertion_point(field_mutable:login_msg_server.IMMsgServInfo.ip_addr1)
  return ip_addr1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMMsgServInfo::release_ip_addr1() {
  // @@protoc_insertion_point(field_release:login_msg_server.IMMsgServInfo.ip_addr1)
  
  return ip_addr1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMMsgServInfo::set_allocated_ip_addr1(::std::string* ip_addr1) {
  if (ip_addr1 != nullptr) {
    
  } else {
    
  }
  ip_addr1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_addr1);
  // @@protoc_insertion_point(field_set_allocated:login_msg_server.IMMsgServInfo.ip_addr1)
}

// string ip_addr2 = 2;
inline void IMMsgServInfo::clear_ip_addr2() {
  ip_addr2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMMsgServInfo::ip_addr2() const {
  // @@protoc_insertion_point(field_get:login_msg_server.IMMsgServInfo.ip_addr2)
  return ip_addr2_.GetNoArena();
}
inline void IMMsgServInfo::set_ip_addr2(const ::std::string& value) {
  
  ip_addr2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login_msg_server.IMMsgServInfo.ip_addr2)
}
#if LANG_CXX11
inline void IMMsgServInfo::set_ip_addr2(::std::string&& value) {
  
  ip_addr2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:login_msg_server.IMMsgServInfo.ip_addr2)
}
#endif
inline void IMMsgServInfo::set_ip_addr2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ip_addr2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login_msg_server.IMMsgServInfo.ip_addr2)
}
inline void IMMsgServInfo::set_ip_addr2(const char* value, size_t size) {
  
  ip_addr2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login_msg_server.IMMsgServInfo.ip_addr2)
}
inline ::std::string* IMMsgServInfo::mutable_ip_addr2() {
  
  // @@protoc_insertion_point(field_mutable:login_msg_server.IMMsgServInfo.ip_addr2)
  return ip_addr2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMMsgServInfo::release_ip_addr2() {
  // @@protoc_insertion_point(field_release:login_msg_server.IMMsgServInfo.ip_addr2)
  
  return ip_addr2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMMsgServInfo::set_allocated_ip_addr2(::std::string* ip_addr2) {
  if (ip_addr2 != nullptr) {
    
  } else {
    
  }
  ip_addr2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_addr2);
  // @@protoc_insertion_point(field_set_allocated:login_msg_server.IMMsgServInfo.ip_addr2)
}

// uint32 port = 3;
inline void IMMsgServInfo::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgServInfo::port() const {
  // @@protoc_insertion_point(field_get:login_msg_server.IMMsgServInfo.port)
  return port_;
}
inline void IMMsgServInfo::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:login_msg_server.IMMsgServInfo.port)
}

// uint32 max_conn_cnt = 4;
inline void IMMsgServInfo::clear_max_conn_cnt() {
  max_conn_cnt_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgServInfo::max_conn_cnt() const {
  // @@protoc_insertion_point(field_get:login_msg_server.IMMsgServInfo.max_conn_cnt)
  return max_conn_cnt_;
}
inline void IMMsgServInfo::set_max_conn_cnt(::google::protobuf::uint32 value) {
  
  max_conn_cnt_ = value;
  // @@protoc_insertion_point(field_set:login_msg_server.IMMsgServInfo.max_conn_cnt)
}

// uint32 cur_conn_cnt = 5;
inline void IMMsgServInfo::clear_cur_conn_cnt() {
  cur_conn_cnt_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgServInfo::cur_conn_cnt() const {
  // @@protoc_insertion_point(field_get:login_msg_server.IMMsgServInfo.cur_conn_cnt)
  return cur_conn_cnt_;
}
inline void IMMsgServInfo::set_cur_conn_cnt(::google::protobuf::uint32 value) {
  
  cur_conn_cnt_ = value;
  // @@protoc_insertion_point(field_set:login_msg_server.IMMsgServInfo.cur_conn_cnt)
}

// string hostname = 6;
inline void IMMsgServInfo::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMMsgServInfo::hostname() const {
  // @@protoc_insertion_point(field_get:login_msg_server.IMMsgServInfo.hostname)
  return hostname_.GetNoArena();
}
inline void IMMsgServInfo::set_hostname(const ::std::string& value) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login_msg_server.IMMsgServInfo.hostname)
}
#if LANG_CXX11
inline void IMMsgServInfo::set_hostname(::std::string&& value) {
  
  hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:login_msg_server.IMMsgServInfo.hostname)
}
#endif
inline void IMMsgServInfo::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login_msg_server.IMMsgServInfo.hostname)
}
inline void IMMsgServInfo::set_hostname(const char* value, size_t size) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login_msg_server.IMMsgServInfo.hostname)
}
inline ::std::string* IMMsgServInfo::mutable_hostname() {
  
  // @@protoc_insertion_point(field_mutable:login_msg_server.IMMsgServInfo.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMMsgServInfo::release_hostname() {
  // @@protoc_insertion_point(field_release:login_msg_server.IMMsgServInfo.hostname)
  
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMMsgServInfo::set_allocated_hostname(::std::string* hostname) {
  if (hostname != nullptr) {
    
  } else {
    
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:login_msg_server.IMMsgServInfo.hostname)
}

// -------------------------------------------------------------------

// IMUserCntUpdate

// uint32 user_action = 1;
inline void IMUserCntUpdate::clear_user_action() {
  user_action_ = 0u;
}
inline ::google::protobuf::uint32 IMUserCntUpdate::user_action() const {
  // @@protoc_insertion_point(field_get:login_msg_server.IMUserCntUpdate.user_action)
  return user_action_;
}
inline void IMUserCntUpdate::set_user_action(::google::protobuf::uint32 value) {
  
  user_action_ = value;
  // @@protoc_insertion_point(field_set:login_msg_server.IMUserCntUpdate.user_action)
}

// -------------------------------------------------------------------

// IMMsgServRsp

// int32 result_code = 1;
inline void IMMsgServRsp::clear_result_code() {
  result_code_ = 0;
}
inline ::google::protobuf::int32 IMMsgServRsp::result_code() const {
  // @@protoc_insertion_point(field_get:login_msg_server.IMMsgServRsp.result_code)
  return result_code_;
}
inline void IMMsgServRsp::set_result_code(::google::protobuf::int32 value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:login_msg_server.IMMsgServRsp.result_code)
}

// string prior_ip = 2;
inline void IMMsgServRsp::clear_prior_ip() {
  prior_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMMsgServRsp::prior_ip() const {
  // @@protoc_insertion_point(field_get:login_msg_server.IMMsgServRsp.prior_ip)
  return prior_ip_.GetNoArena();
}
inline void IMMsgServRsp::set_prior_ip(const ::std::string& value) {
  
  prior_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login_msg_server.IMMsgServRsp.prior_ip)
}
#if LANG_CXX11
inline void IMMsgServRsp::set_prior_ip(::std::string&& value) {
  
  prior_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:login_msg_server.IMMsgServRsp.prior_ip)
}
#endif
inline void IMMsgServRsp::set_prior_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  prior_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login_msg_server.IMMsgServRsp.prior_ip)
}
inline void IMMsgServRsp::set_prior_ip(const char* value, size_t size) {
  
  prior_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login_msg_server.IMMsgServRsp.prior_ip)
}
inline ::std::string* IMMsgServRsp::mutable_prior_ip() {
  
  // @@protoc_insertion_point(field_mutable:login_msg_server.IMMsgServRsp.prior_ip)
  return prior_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMMsgServRsp::release_prior_ip() {
  // @@protoc_insertion_point(field_release:login_msg_server.IMMsgServRsp.prior_ip)
  
  return prior_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMMsgServRsp::set_allocated_prior_ip(::std::string* prior_ip) {
  if (prior_ip != nullptr) {
    
  } else {
    
  }
  prior_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prior_ip);
  // @@protoc_insertion_point(field_set_allocated:login_msg_server.IMMsgServRsp.prior_ip)
}

// string backip_ip = 3;
inline void IMMsgServRsp::clear_backip_ip() {
  backip_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMMsgServRsp::backip_ip() const {
  // @@protoc_insertion_point(field_get:login_msg_server.IMMsgServRsp.backip_ip)
  return backip_ip_.GetNoArena();
}
inline void IMMsgServRsp::set_backip_ip(const ::std::string& value) {
  
  backip_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login_msg_server.IMMsgServRsp.backip_ip)
}
#if LANG_CXX11
inline void IMMsgServRsp::set_backip_ip(::std::string&& value) {
  
  backip_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:login_msg_server.IMMsgServRsp.backip_ip)
}
#endif
inline void IMMsgServRsp::set_backip_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  backip_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login_msg_server.IMMsgServRsp.backip_ip)
}
inline void IMMsgServRsp::set_backip_ip(const char* value, size_t size) {
  
  backip_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login_msg_server.IMMsgServRsp.backip_ip)
}
inline ::std::string* IMMsgServRsp::mutable_backip_ip() {
  
  // @@protoc_insertion_point(field_mutable:login_msg_server.IMMsgServRsp.backip_ip)
  return backip_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMMsgServRsp::release_backip_ip() {
  // @@protoc_insertion_point(field_release:login_msg_server.IMMsgServRsp.backip_ip)
  
  return backip_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMMsgServRsp::set_allocated_backip_ip(::std::string* backip_ip) {
  if (backip_ip != nullptr) {
    
  } else {
    
  }
  backip_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), backip_ip);
  // @@protoc_insertion_point(field_set_allocated:login_msg_server.IMMsgServRsp.backip_ip)
}

// uint32 port = 4;
inline void IMMsgServRsp::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgServRsp::port() const {
  // @@protoc_insertion_point(field_get:login_msg_server.IMMsgServRsp.port)
  return port_;
}
inline void IMMsgServRsp::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:login_msg_server.IMMsgServRsp.port)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace login_msg_server

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_login_5fmsg_5fserver_2eproto
