// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login_msg_server.proto

#include "login_msg_server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace login_msg_server {
class IMMsgServInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMMsgServInfo> _instance;
} _IMMsgServInfo_default_instance_;
class IMUserCntUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMUserCntUpdate> _instance;
} _IMUserCntUpdate_default_instance_;
class IMMsgServRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMMsgServRsp> _instance;
} _IMMsgServRsp_default_instance_;
}  // namespace login_msg_server
static void InitDefaultsIMMsgServInfo_login_5fmsg_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::login_msg_server::_IMMsgServInfo_default_instance_;
    new (ptr) ::login_msg_server::IMMsgServInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::login_msg_server::IMMsgServInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IMMsgServInfo_login_5fmsg_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIMMsgServInfo_login_5fmsg_5fserver_2eproto}, {}};

static void InitDefaultsIMUserCntUpdate_login_5fmsg_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::login_msg_server::_IMUserCntUpdate_default_instance_;
    new (ptr) ::login_msg_server::IMUserCntUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::login_msg_server::IMUserCntUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IMUserCntUpdate_login_5fmsg_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIMUserCntUpdate_login_5fmsg_5fserver_2eproto}, {}};

static void InitDefaultsIMMsgServRsp_login_5fmsg_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::login_msg_server::_IMMsgServRsp_default_instance_;
    new (ptr) ::login_msg_server::IMMsgServRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::login_msg_server::IMMsgServRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IMMsgServRsp_login_5fmsg_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIMMsgServRsp_login_5fmsg_5fserver_2eproto}, {}};

void InitDefaults_login_5fmsg_5fserver_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_IMMsgServInfo_login_5fmsg_5fserver_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IMUserCntUpdate_login_5fmsg_5fserver_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IMMsgServRsp_login_5fmsg_5fserver_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_login_5fmsg_5fserver_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_login_5fmsg_5fserver_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_login_5fmsg_5fserver_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_login_5fmsg_5fserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::login_msg_server::IMMsgServInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::login_msg_server::IMMsgServInfo, ip_addr1_),
  PROTOBUF_FIELD_OFFSET(::login_msg_server::IMMsgServInfo, ip_addr2_),
  PROTOBUF_FIELD_OFFSET(::login_msg_server::IMMsgServInfo, port_),
  PROTOBUF_FIELD_OFFSET(::login_msg_server::IMMsgServInfo, max_conn_cnt_),
  PROTOBUF_FIELD_OFFSET(::login_msg_server::IMMsgServInfo, cur_conn_cnt_),
  PROTOBUF_FIELD_OFFSET(::login_msg_server::IMMsgServInfo, hostname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::login_msg_server::IMUserCntUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::login_msg_server::IMUserCntUpdate, user_action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::login_msg_server::IMMsgServRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::login_msg_server::IMMsgServRsp, result_code_),
  PROTOBUF_FIELD_OFFSET(::login_msg_server::IMMsgServRsp, prior_ip_),
  PROTOBUF_FIELD_OFFSET(::login_msg_server::IMMsgServRsp, backip_ip_),
  PROTOBUF_FIELD_OFFSET(::login_msg_server::IMMsgServRsp, port_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::login_msg_server::IMMsgServInfo)},
  { 11, -1, sizeof(::login_msg_server::IMUserCntUpdate)},
  { 17, -1, sizeof(::login_msg_server::IMMsgServRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::login_msg_server::_IMMsgServInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::login_msg_server::_IMUserCntUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::login_msg_server::_IMMsgServRsp_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_login_5fmsg_5fserver_2eproto = {
  {}, AddDescriptors_login_5fmsg_5fserver_2eproto, "login_msg_server.proto", schemas,
  file_default_instances, TableStruct_login_5fmsg_5fserver_2eproto::offsets,
  file_level_metadata_login_5fmsg_5fserver_2eproto, 3, file_level_enum_descriptors_login_5fmsg_5fserver_2eproto, file_level_service_descriptors_login_5fmsg_5fserver_2eproto,
};

const char descriptor_table_protodef_login_5fmsg_5fserver_2eproto[] =
  "\n\026login_msg_server.proto\022\020login_msg_serv"
  "er\"\177\n\rIMMsgServInfo\022\020\n\010ip_addr1\030\001 \001(\t\022\020\n"
  "\010ip_addr2\030\002 \001(\t\022\014\n\004port\030\003 \001(\r\022\024\n\014max_con"
  "n_cnt\030\004 \001(\r\022\024\n\014cur_conn_cnt\030\005 \001(\r\022\020\n\010hos"
  "tname\030\006 \001(\t\"&\n\017IMUserCntUpdate\022\023\n\013user_a"
  "ction\030\001 \001(\r\"V\n\014IMMsgServRsp\022\023\n\013result_co"
  "de\030\001 \001(\005\022\020\n\010prior_ip\030\002 \001(\t\022\021\n\tbackip_ip\030"
  "\003 \001(\t\022\014\n\004port\030\004 \001(\rb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_login_5fmsg_5fserver_2eproto = {
  false, InitDefaults_login_5fmsg_5fserver_2eproto, 
  descriptor_table_protodef_login_5fmsg_5fserver_2eproto,
  "login_msg_server.proto", &assign_descriptors_table_login_5fmsg_5fserver_2eproto, 307,
};

void AddDescriptors_login_5fmsg_5fserver_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_login_5fmsg_5fserver_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_login_5fmsg_5fserver_2eproto = []() { AddDescriptors_login_5fmsg_5fserver_2eproto(); return true; }();
namespace login_msg_server {

// ===================================================================

void IMMsgServInfo::InitAsDefaultInstance() {
}
class IMMsgServInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMMsgServInfo::kIpAddr1FieldNumber;
const int IMMsgServInfo::kIpAddr2FieldNumber;
const int IMMsgServInfo::kPortFieldNumber;
const int IMMsgServInfo::kMaxConnCntFieldNumber;
const int IMMsgServInfo::kCurConnCntFieldNumber;
const int IMMsgServInfo::kHostnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMMsgServInfo::IMMsgServInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:login_msg_server.IMMsgServInfo)
}
IMMsgServInfo::IMMsgServInfo(const IMMsgServInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr1().size() > 0) {
    ip_addr1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr1_);
  }
  ip_addr2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr2().size() > 0) {
    ip_addr2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr2_);
  }
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hostname().size() > 0) {
    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&cur_conn_cnt_) -
    reinterpret_cast<char*>(&port_)) + sizeof(cur_conn_cnt_));
  // @@protoc_insertion_point(copy_constructor:login_msg_server.IMMsgServInfo)
}

void IMMsgServInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_IMMsgServInfo_login_5fmsg_5fserver_2eproto.base);
  ip_addr1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_addr2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_conn_cnt_) -
      reinterpret_cast<char*>(&port_)) + sizeof(cur_conn_cnt_));
}

IMMsgServInfo::~IMMsgServInfo() {
  // @@protoc_insertion_point(destructor:login_msg_server.IMMsgServInfo)
  SharedDtor();
}

void IMMsgServInfo::SharedDtor() {
  ip_addr1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_addr2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMMsgServInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IMMsgServInfo& IMMsgServInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IMMsgServInfo_login_5fmsg_5fserver_2eproto.base);
  return *internal_default_instance();
}


void IMMsgServInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:login_msg_server.IMMsgServInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_addr2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_conn_cnt_) -
      reinterpret_cast<char*>(&port_)) + sizeof(cur_conn_cnt_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IMMsgServInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IMMsgServInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string ip_addr1 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("login_msg_server.IMMsgServInfo.ip_addr1");
        object = msg->mutable_ip_addr1();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ip_addr2 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("login_msg_server.IMMsgServInfo.ip_addr2");
        object = msg->mutable_ip_addr2();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 port = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 max_conn_cnt = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_max_conn_cnt(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 cur_conn_cnt = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_cur_conn_cnt(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string hostname = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("login_msg_server.IMMsgServInfo.hostname");
        object = msg->mutable_hostname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IMMsgServInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:login_msg_server.IMMsgServInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr1().data(), static_cast<int>(this->ip_addr1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login_msg_server.IMMsgServInfo.ip_addr1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip_addr2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr2().data(), static_cast<int>(this->ip_addr2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login_msg_server.IMMsgServInfo.ip_addr2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_conn_cnt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_conn_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cur_conn_cnt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_conn_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hostname = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hostname().data(), static_cast<int>(this->hostname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login_msg_server.IMMsgServInfo.hostname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:login_msg_server.IMMsgServInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:login_msg_server.IMMsgServInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IMMsgServInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:login_msg_server.IMMsgServInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr1 = 1;
  if (this->ip_addr1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr1().data(), static_cast<int>(this->ip_addr1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login_msg_server.IMMsgServInfo.ip_addr1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr1(), output);
  }

  // string ip_addr2 = 2;
  if (this->ip_addr2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr2().data(), static_cast<int>(this->ip_addr2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login_msg_server.IMMsgServInfo.ip_addr2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip_addr2(), output);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->port(), output);
  }

  // uint32 max_conn_cnt = 4;
  if (this->max_conn_cnt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->max_conn_cnt(), output);
  }

  // uint32 cur_conn_cnt = 5;
  if (this->cur_conn_cnt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->cur_conn_cnt(), output);
  }

  // string hostname = 6;
  if (this->hostname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login_msg_server.IMMsgServInfo.hostname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->hostname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:login_msg_server.IMMsgServInfo)
}

::google::protobuf::uint8* IMMsgServInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:login_msg_server.IMMsgServInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr1 = 1;
  if (this->ip_addr1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr1().data(), static_cast<int>(this->ip_addr1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login_msg_server.IMMsgServInfo.ip_addr1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr1(), target);
  }

  // string ip_addr2 = 2;
  if (this->ip_addr2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr2().data(), static_cast<int>(this->ip_addr2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login_msg_server.IMMsgServInfo.ip_addr2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip_addr2(), target);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->port(), target);
  }

  // uint32 max_conn_cnt = 4;
  if (this->max_conn_cnt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->max_conn_cnt(), target);
  }

  // uint32 cur_conn_cnt = 5;
  if (this->cur_conn_cnt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->cur_conn_cnt(), target);
  }

  // string hostname = 6;
  if (this->hostname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login_msg_server.IMMsgServInfo.hostname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->hostname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:login_msg_server.IMMsgServInfo)
  return target;
}

size_t IMMsgServInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:login_msg_server.IMMsgServInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip_addr1 = 1;
  if (this->ip_addr1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr1());
  }

  // string ip_addr2 = 2;
  if (this->ip_addr2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr2());
  }

  // string hostname = 6;
  if (this->hostname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hostname());
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  // uint32 max_conn_cnt = 4;
  if (this->max_conn_cnt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_conn_cnt());
  }

  // uint32 cur_conn_cnt = 5;
  if (this->cur_conn_cnt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_conn_cnt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IMMsgServInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:login_msg_server.IMMsgServInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const IMMsgServInfo* source =
      ::google::protobuf::DynamicCastToGenerated<IMMsgServInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:login_msg_server.IMMsgServInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:login_msg_server.IMMsgServInfo)
    MergeFrom(*source);
  }
}

void IMMsgServInfo::MergeFrom(const IMMsgServInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:login_msg_server.IMMsgServInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr1().size() > 0) {

    ip_addr1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr1_);
  }
  if (from.ip_addr2().size() > 0) {

    ip_addr2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr2_);
  }
  if (from.hostname().size() > 0) {

    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.max_conn_cnt() != 0) {
    set_max_conn_cnt(from.max_conn_cnt());
  }
  if (from.cur_conn_cnt() != 0) {
    set_cur_conn_cnt(from.cur_conn_cnt());
  }
}

void IMMsgServInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:login_msg_server.IMMsgServInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMMsgServInfo::CopyFrom(const IMMsgServInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:login_msg_server.IMMsgServInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMMsgServInfo::IsInitialized() const {
  return true;
}

void IMMsgServInfo::Swap(IMMsgServInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMMsgServInfo::InternalSwap(IMMsgServInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  ip_addr1_.Swap(&other->ip_addr1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_addr2_.Swap(&other->ip_addr2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hostname_.Swap(&other->hostname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
  swap(max_conn_cnt_, other->max_conn_cnt_);
  swap(cur_conn_cnt_, other->cur_conn_cnt_);
}

::google::protobuf::Metadata IMMsgServInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_5fmsg_5fserver_2eproto);
  return ::file_level_metadata_login_5fmsg_5fserver_2eproto[kIndexInFileMessages];
}


// ===================================================================

void IMUserCntUpdate::InitAsDefaultInstance() {
}
class IMUserCntUpdate::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMUserCntUpdate::kUserActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMUserCntUpdate::IMUserCntUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:login_msg_server.IMUserCntUpdate)
}
IMUserCntUpdate::IMUserCntUpdate(const IMUserCntUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_action_ = from.user_action_;
  // @@protoc_insertion_point(copy_constructor:login_msg_server.IMUserCntUpdate)
}

void IMUserCntUpdate::SharedCtor() {
  user_action_ = 0u;
}

IMUserCntUpdate::~IMUserCntUpdate() {
  // @@protoc_insertion_point(destructor:login_msg_server.IMUserCntUpdate)
  SharedDtor();
}

void IMUserCntUpdate::SharedDtor() {
}

void IMUserCntUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IMUserCntUpdate& IMUserCntUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IMUserCntUpdate_login_5fmsg_5fserver_2eproto.base);
  return *internal_default_instance();
}


void IMUserCntUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:login_msg_server.IMUserCntUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_action_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IMUserCntUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IMUserCntUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 user_action = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_user_action(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IMUserCntUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:login_msg_server.IMUserCntUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:login_msg_server.IMUserCntUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:login_msg_server.IMUserCntUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IMUserCntUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:login_msg_server.IMUserCntUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_action = 1;
  if (this->user_action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:login_msg_server.IMUserCntUpdate)
}

::google::protobuf::uint8* IMUserCntUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:login_msg_server.IMUserCntUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_action = 1;
  if (this->user_action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:login_msg_server.IMUserCntUpdate)
  return target;
}

size_t IMUserCntUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:login_msg_server.IMUserCntUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 user_action = 1;
  if (this->user_action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IMUserCntUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:login_msg_server.IMUserCntUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const IMUserCntUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<IMUserCntUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:login_msg_server.IMUserCntUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:login_msg_server.IMUserCntUpdate)
    MergeFrom(*source);
  }
}

void IMUserCntUpdate::MergeFrom(const IMUserCntUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:login_msg_server.IMUserCntUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_action() != 0) {
    set_user_action(from.user_action());
  }
}

void IMUserCntUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:login_msg_server.IMUserCntUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMUserCntUpdate::CopyFrom(const IMUserCntUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:login_msg_server.IMUserCntUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMUserCntUpdate::IsInitialized() const {
  return true;
}

void IMUserCntUpdate::Swap(IMUserCntUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMUserCntUpdate::InternalSwap(IMUserCntUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(user_action_, other->user_action_);
}

::google::protobuf::Metadata IMUserCntUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_5fmsg_5fserver_2eproto);
  return ::file_level_metadata_login_5fmsg_5fserver_2eproto[kIndexInFileMessages];
}


// ===================================================================

void IMMsgServRsp::InitAsDefaultInstance() {
}
class IMMsgServRsp::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMMsgServRsp::kResultCodeFieldNumber;
const int IMMsgServRsp::kPriorIpFieldNumber;
const int IMMsgServRsp::kBackipIpFieldNumber;
const int IMMsgServRsp::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMMsgServRsp::IMMsgServRsp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:login_msg_server.IMMsgServRsp)
}
IMMsgServRsp::IMMsgServRsp(const IMMsgServRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prior_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prior_ip().size() > 0) {
    prior_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prior_ip_);
  }
  backip_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.backip_ip().size() > 0) {
    backip_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.backip_ip_);
  }
  ::memcpy(&result_code_, &from.result_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&result_code_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:login_msg_server.IMMsgServRsp)
}

void IMMsgServRsp::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_IMMsgServRsp_login_5fmsg_5fserver_2eproto.base);
  prior_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  backip_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&result_code_)) + sizeof(port_));
}

IMMsgServRsp::~IMMsgServRsp() {
  // @@protoc_insertion_point(destructor:login_msg_server.IMMsgServRsp)
  SharedDtor();
}

void IMMsgServRsp::SharedDtor() {
  prior_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  backip_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMMsgServRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IMMsgServRsp& IMMsgServRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IMMsgServRsp_login_5fmsg_5fserver_2eproto.base);
  return *internal_default_instance();
}


void IMMsgServRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:login_msg_server.IMMsgServRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prior_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  backip_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&result_code_)) + sizeof(port_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IMMsgServRsp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IMMsgServRsp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 result_code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_result_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string prior_ip = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("login_msg_server.IMMsgServRsp.prior_ip");
        object = msg->mutable_prior_ip();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string backip_ip = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("login_msg_server.IMMsgServRsp.backip_ip");
        object = msg->mutable_backip_ip();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 port = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IMMsgServRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:login_msg_server.IMMsgServRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string prior_ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prior_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prior_ip().data(), static_cast<int>(this->prior_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login_msg_server.IMMsgServRsp.prior_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string backip_ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_backip_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->backip_ip().data(), static_cast<int>(this->backip_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login_msg_server.IMMsgServRsp.backip_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:login_msg_server.IMMsgServRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:login_msg_server.IMMsgServRsp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IMMsgServRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:login_msg_server.IMMsgServRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result_code = 1;
  if (this->result_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result_code(), output);
  }

  // string prior_ip = 2;
  if (this->prior_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prior_ip().data(), static_cast<int>(this->prior_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login_msg_server.IMMsgServRsp.prior_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->prior_ip(), output);
  }

  // string backip_ip = 3;
  if (this->backip_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backip_ip().data(), static_cast<int>(this->backip_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login_msg_server.IMMsgServRsp.backip_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->backip_ip(), output);
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:login_msg_server.IMMsgServRsp)
}

::google::protobuf::uint8* IMMsgServRsp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:login_msg_server.IMMsgServRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result_code = 1;
  if (this->result_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result_code(), target);
  }

  // string prior_ip = 2;
  if (this->prior_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prior_ip().data(), static_cast<int>(this->prior_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login_msg_server.IMMsgServRsp.prior_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->prior_ip(), target);
  }

  // string backip_ip = 3;
  if (this->backip_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backip_ip().data(), static_cast<int>(this->backip_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login_msg_server.IMMsgServRsp.backip_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->backip_ip(), target);
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:login_msg_server.IMMsgServRsp)
  return target;
}

size_t IMMsgServRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:login_msg_server.IMMsgServRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string prior_ip = 2;
  if (this->prior_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->prior_ip());
  }

  // string backip_ip = 3;
  if (this->backip_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->backip_ip());
  }

  // int32 result_code = 1;
  if (this->result_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result_code());
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IMMsgServRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:login_msg_server.IMMsgServRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const IMMsgServRsp* source =
      ::google::protobuf::DynamicCastToGenerated<IMMsgServRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:login_msg_server.IMMsgServRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:login_msg_server.IMMsgServRsp)
    MergeFrom(*source);
  }
}

void IMMsgServRsp::MergeFrom(const IMMsgServRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:login_msg_server.IMMsgServRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.prior_ip().size() > 0) {

    prior_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prior_ip_);
  }
  if (from.backip_ip().size() > 0) {

    backip_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.backip_ip_);
  }
  if (from.result_code() != 0) {
    set_result_code(from.result_code());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void IMMsgServRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:login_msg_server.IMMsgServRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMMsgServRsp::CopyFrom(const IMMsgServRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:login_msg_server.IMMsgServRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMMsgServRsp::IsInitialized() const {
  return true;
}

void IMMsgServRsp::Swap(IMMsgServRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMMsgServRsp::InternalSwap(IMMsgServRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  prior_ip_.Swap(&other->prior_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  backip_ip_.Swap(&other->backip_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_code_, other->result_code_);
  swap(port_, other->port_);
}

::google::protobuf::Metadata IMMsgServRsp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_5fmsg_5fserver_2eproto);
  return ::file_level_metadata_login_5fmsg_5fserver_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace login_msg_server
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::login_msg_server::IMMsgServInfo* Arena::CreateMaybeMessage< ::login_msg_server::IMMsgServInfo >(Arena* arena) {
  return Arena::CreateInternal< ::login_msg_server::IMMsgServInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::login_msg_server::IMUserCntUpdate* Arena::CreateMaybeMessage< ::login_msg_server::IMUserCntUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::login_msg_server::IMUserCntUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::login_msg_server::IMMsgServRsp* Arena::CreateMaybeMessage< ::login_msg_server::IMMsgServRsp >(Arena* arena) {
  return Arena::CreateInternal< ::login_msg_server::IMMsgServRsp >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
